//= require Chart.bundle
//= require chartkick
$(document).ready(function() {
  $("#eliminar").click(function(e) {
    var countryName = $("#country_drop").val();
    countryName = countryName.toUpperCase();
    // Lee la informaci칩n Json del textarea
    json_countries = JSON.parse($("#content_json").val());
    // Se busca y se a침aden todos los dem치s paises
    for (var key in json_countries) {
      if (json_countries[key].country == countryName) {
        // countries_updated.push(json_countries[key]);
        json_countries[key].added = 0;
      };
    };
    // Actualizamos el objeto Json
    $("#content_json").val(JSON.stringify(json_countries));
    updateMap();
    $("#country_drop").val("");
  });

  $("#reiniciar").click(function (e) {
    json_countries = JSON.parse($("#content_json").val());
      for (var key in json_countries) {
          json_countries[key].added = 1;
      }
      $("#content_json").val(JSON.stringify(json_countries));
      updateMap();
  });
});

// Esta funci칩n se utiliza para actualizar el chart mapa con los objetos que sean visibles added = 1(true)
// https://github.com/ankane/chartkick/issues/304 Actualizar el chart

function updateMap() {
  var json_countries = $("#content_json").val();
  json_countries = JSON.parse(json_countries);
   var countries_map_values = {};
  for (var key in json_countries) {
    if (json_countries[key].added != 0) {
      // Se crea un hash tipo hashset (no repite valores)
      if (!countries_map_values.hasOwnProperty(json_countries[key].country)) {
        countries_map_values[json_countries[key].country] = 1;
      } else {
        countries_map_values[json_countries[key].country] += 1;
      }
    }
  }
  var chart = Chartkick.charts["chart-1"];
  chart.updateData(countries_map_values);
}
