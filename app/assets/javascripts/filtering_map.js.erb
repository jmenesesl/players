//= require Chart.bundle
//= require chartkick
$(document).ready(function() {
  $("#eliminar").click(function(e) {
    var countryName = $("#country_drop").val();
    countryName = countryName.toUpperCase();
    // Lee la informaci칩n Json del textarea
    json_countries = JSON.parse($("#content_json").val());
    // Se busca y se a침aden todos los dem치s paises
    for (var key in json_countries) {
      if (json_countries[key].country == countryName) {
        // countries_updated.push(json_countries[key]);
        json_countries[key].added = 0;
      };
    };
    // Actualizamos el objeto Json
    $("#content_json").val(JSON.stringify(json_countries));
    updateMap();
    $("#country_drop").val("");
  });

  $("#date_anyTime").click(function (e) {
    json_countries = JSON.parse($("#content_json").val());
      for (var key in json_countries) {
          json_countries[key].added = 1;
      }
      $("#content_json").val(JSON.stringify(json_countries));
      updateMap();
  });

  $("#date_today").click(function (e) {
      today = new Date();
      today = Date.parse(today.toDateString());
      json_countries = JSON.parse($("#content_json").val());

      for (var key in json_countries) {
        date_string = json_countries[key].created_at.substring(0,10);
        date_object = Date.parse(date_string);
        // Importante: hoy empieza desde las 00 hasta el timestamp actual
        // date_object <= Date.parse(new Date())
          if (date_object >= today ) {
            json_countries[key].added = 1;
          } else {
            json_countries[key].added = 0;
          }
      }
      $("#content_json").val(JSON.stringify(json_countries));
      updateMap();
  });


  $("#date_thisWeek").click(function (e) {
      dateUntil = new Date();
      dateUntil = Date.parse(dateUntil);
      days = 7;
      var date = new Date();
      // Con la siguiente linea, obtenemos el dia de hoy a las 00:00
      date = new Date(Date.parse(date.toDateString()));
      // Con la siguiente linea, obtenemos el dia de hace 7 dias a las 00:00
      dateFrom = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));

      json_countries = JSON.parse($("#content_json").val());

      for (var key in json_countries) {
        date_string = json_countries[key].created_at.substring(0,10);
        date_object = Date.parse(date_string);
          if (date_object <= dateUntil && date_object >= dateFrom ) {
            json_countries[key].added = 1;
          } else {
            json_countries[key].added = 0;
          }
      }

      $("#content_json").val(JSON.stringify(json_countries));
      updateMap();
  });


  $("#filterDate").click(function (e) {
      dateFrom = $("#dateFrom").val();
      dateUntil = $("#dateUntil").val();
      alert("Desde: " + dateFrom + " Hasta: " + dateUntil);
      dateFrom = Date.parse(dateFrom);
      dateUntil = Date.parse(dateUntil);

      json_countries = JSON.parse($("#content_json").val());

      for (var key in json_countries) {
        date_string = json_countries[key].created_at.substring(0,10);
        date_object = Date.parse(date_string);
        // No tiene en cuenta horas ni minutos. por lo tanto obtiene por dias enteros.
          if (date_object <= dateUntil && date_object >= dateFrom ) {
            json_countries[key].added = 1;
          } else {
            json_countries[key].added = 0;
          }
      }

      $("#content_json").val(JSON.stringify(json_countries));
      updateMap();
  });
});

// Esta funci칩n se utiliza para actualizar el chart mapa con los objetos que sean visibles added = 1(true)
// https://github.com/ankane/chartkick/issues/304 Actualizar el chart

function updateMap() {
  var json_countries = $("#content_json").val();
  json_countries = JSON.parse(json_countries);
   var countries_map_values = {};
  for (var key in json_countries) {
    if (json_countries[key].added != 0) {
      // Se crea un hash tipo hashset (no repite valores)
      if (!countries_map_values.hasOwnProperty(json_countries[key].country)) {
        countries_map_values[json_countries[key].country] = 1;
      } else {
        countries_map_values[json_countries[key].country] += 1;
      }
    }
  }
  var chart = Chartkick.charts["chart-1"];
  chart.updateData(countries_map_values);
}
